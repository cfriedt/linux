/*
 * Copyright 2013 Annapurna Labs Ltd.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/dts-v1/;

/include/ "alpine.dtsi"

/ {
	model = "Annapurna Labs Alpine Dev Board";
	compatible = "annapurna-labs,alpine";

	hypervisor {
	};

	soc {
		board-cfg {
			id = "alpine_db_qnap";

			/* U-Boot offset in boot source [bytes] */
			u-boot-offset = <0x20000>;

			/*
			 * Some of the PBS bus controllers have dedicated pins,
			 * however most of the pins are Multi-usage I/Os (MUIO),
			 * thus enabling flexible usage.
			 * Refer to the specific chip datasheet for further details.
			 *
			 * Choose which interfaces are to be multiplexed:
			 * - &if_nand_8 - NAND
			 * - &if_nand_cs_0, ..., &if_nand_cs_3 - NAND CS 0..3
			 * - &if_nand_wp - NAND WP
			 * - &if_sata_0_leds, &if_sata_1_leds - SATA leds
			 * - &if_eth_leds - Ethernet leds
			 * - &if_uart_1, ..., &if_uart_3 - UART 1..3
			 * - &if_i2c_gen - secondary I2C conrtoller
			 * - &if_ulpi_0_rst_n - ULPI reset
			 * - &if_pci_ep_int_a - PCIe EP interrupt
			 * - &if_pci_ep_reset_out - PCIe EP reset out
			 * - &if_spim_a_ss_1, ..., &if_spim_a_ss_3 - SPI CS 1..3
			 */
			pinctrl_init {
				pinctrl-0 = <
					&if_nand_8
					&if_nand_cs_0
                    &if_uart_1
                    &if_uart_2
					>;
			};

			/*
			 * Initial GPIO configuration - which pins are input,
			 * which are output, and what is the initial value for
			 * output pins.
			 * By default, GPIO pins that are not listed below are
			 * input pins.
			 * GPIO pins which are listed below are automatically
			 * multiplexed and should not conflict with the
			 * multiplexed interfaces listed in 'pinctrl_init'
			 * above.
			 */
			gpio_init {
				/* <
				 * GPIO num 1, is output, output value
				 * GPIO num 2, is output, output value
				 * ...
				 * GPIO num N, is output, output value
				 * >
				 */
				gpio-list = <
					/* Inputs */
					0 0 0 /* UART 1,2,3 module inserted */
					32 0 0 /* PCIE0 present */
					33 0 0 /* PCIE1_present */
					34 0 0 /* PCIE2SATA not present */
					35 0 0 /* SFP 0,1 absent */
					36 0 0 /* SFP 2,3 absent */
					37 0 0 /* External ETH PHY interrupt */

					/* Outputs */
					1 1 0 /* Debug led 0 */
					2 1 0 /* Debug led 1 */
					3 1 0 /* ULPI 0 RST_N */
					4 1 0
					5 1 0 /* Preloader EEPROM enable */
					38 1 1 /* PCI RSTN */
					39 1 1 /* SFP ON */
					40 1 0 /* External ETH PHY A reset */
					41 1 0 /* External ETH PHY B reset */
					42 1 1 /* VDD DRAM 1: 1.5V, 0: 1.35V */
					43 1 0 /* VTT OFF */
					29 1 0 /* Eth2 LED */
					31 1 0 /* ETH0 LED */
				>;
			};

			/* SerDes initialization configuration */
			serdes {
				/*
				 * 'ref-clock' can be any of the following:
				 * - "100Mhz-internal" - 100 Mhz internal clock
				 * - "100Mhz" - 100 Mhz on-board clock
				 * - "156.25Mhz" - 156.25 Mhz on-board clock
				 * - "right" - Clock is routed from right group
				 *             - assuming the right group has
				 *               on-board clock
				 *             - assuming 3 <> 2 <> 1 <> 0
				 * - "left" - Clock is routed from left group
				 *            - assuming the left group has
				 *              on-board clock
				 *            - assuming 3 <> 2 <> 1 <> 0
				 *
				 * 'active-lanes' selects which lanes are active
				 * e.g. <0 1 2 3>, <0 1>, etc.
				 *
				 * 'inv-tx-lanes' selects which lanes have their
				 * Tx polarity inverted (+/-)
				 * e.g. <0 1 2 3>, <0 1>, etc.
				 *
				 * 'inv-rx-lanes' selects which lanes have their
				 * Rx polarity inverted (+/-)
				 * e.g. <0 1 2 3>, <0 1>, etc.
				 *
				 * 'ssc' - SSC (spread spectrum clock)
				 * - "enabled" or "disabled"
				 * - Relevant only for 'interface' = 'sata'
				 *
				 * group 0:
				 * 'interface' can be any of the following:
				 * - "off" - no interface on this group
				 * - "off_bp" - no interface on this group, but
				 *              r2l/l2r clocks are bypassed
				 * - "pcie_g2x2_usb" - PCIe gen 2 x2 + USB
				 * - "pcie_g2x2_pcie_g2x2" - 2xPCIe gen 2 x2
				 * - "pcie_g3x4" - PCIe gen 3 x4
				 *
				 * group 1:
				 * 'interface' can be any of the following:
				 * - "off" - no interface on this group
				 * - "off_bp" - no interface on this group, but
				 *              r2l/l2r clocks are bypassed
				 * - "pcie_g3x4" - PCIe gen 3 x4
				 * - "sata" - SATA (up to 4 ports)
				 *
				 * group 2:
				 * 'interface' can be any of the following:
				 * - "off" - no interface on this group
				 * - "off_bp" - no interface on this group, but
				 *              r2l/l2r clocks are bypassed
				 * - "pcie_g3x4" - PCIe gen 3 x4
				 * - "sata" - SATA (up to 4 ports)
				 *
				 * group 3:
				 * 'interface' can be any of the following:
				 * - "off" - no interface on this group
				 * - "off_bp" - no interface on this group, but
				 *              r2l/l2r clocks are bypassed
				 * - "pcie_g2x2_usb" - PCIe gen 2 x2 + USB
				 * - "sgmii" - SGMII (up to 4 ports)
				 * - "10gbe" - 10GbE (up to 4 ports)
				 */

				group0 {
					interface = "pcie_g3x4";
					ref-clock = "left";
					active-lanes = <0 1 2 3>;
					inv-tx-lanes = <>;
					inv-rx-lanes = <>;
					ssc = "disabled";
				};

				group1 {
					interface = "sata";
					ref-clock = "100Mhz";
					active-lanes = <0 1 2 3>;
					inv-tx-lanes = <>;
					inv-rx-lanes = <>;
					ssc = "disabled";
				};

				group2 {
					interface = "sata";
					ref-clock = "right";
					active-lanes = <0 1 2 3>;
					inv-tx-lanes = <>;
					inv-rx-lanes = <>;
					ssc = "disabled";
				};

				group3 {
					interface = "10gbe";
					ref-clock = "156.25Mhz";
					active-lanes = <1 3>;
					inv-tx-lanes = <>;
					inv-rx-lanes = <>;
					ssc = "disabled";
				};
			};

			/* Ethernet port configuration */
			ethernet {
				port0 {
					status = "enabled";

					/*
					 * MAC mode (rgmii, sgmii, 1g-serial, 10g-serial, auto-detect, auto-detect-auto-speed)
					 * - auto-detect mode is relevant when SFP exists. in this mode
					 * SFP EEPROM will be read to detect what SFP inserted
					 * - auto-detect-auto-speed mode is relevant when SFP exists and
					 * the SerDes reference clock frequency is 156.25Mhz. In this
					 * mode SFP EEPROM will be read to detect what SFP inserted while
					 * 10G serial and 1G serial SFP modeuls can be exchanged on-the-fly
					 * as long as all active SerDes based Ethernet ports use the same
					 * mode.
					 */
					mode = "auto-detect-auto-speed";

					/*
					 * I2C bus ID as shows in Linux I2C bus enumeration:
					 * When using I2C_A and I2C Mux is connected to I2C_A, Linux enumerates multiple I2C buses:
					 * - I2C bus 0 is the physical bus
					 * - I2C bus 1 is channel 0 of the mux
					 * - I2C bus 2 is channel 1 of the mux
					 * - ...
					 * Relevant when MAC mode is auto-detect or when phy_type is i2c
					 */
					/* i2c-id = <1>; */
					i2c-id = <2>;

					10g-serial {
						auto-neg = "disabled";
						link-training = "disabled";
						fec = "disabled";
					};
				};

				port1 {
					status = "enabled";

					/*
					 * MAC mode (rgmii, sgmii, 1g-serial, 10g-serial, auto-detect, auto-detect-auto-speed)
					 * - auto-detect mode is relevant when SFP exists. in this mode
					 * SFP EEPROM will be read to detect what SFP inserted
					 * - auto-detect-auto-speed mode is relevant when SFP exists and
					 * the SerDes reference clock frequency is 156.25Mhz. In this
					 * mode SFP EEPROM will be read to detect what SFP inserted while
					 * 10G serial and 1G serial SFP modeuls can be exchanged on-the-fly
					 * as long as all active SerDes based Ethernet ports use the same
					 * mode.
					 */
					mode = "rgmii";

					ext_phy {
						/* PHY management interface type (mdc-mdio, xmdc-xmdio, i2c) */
						phy_mgmt_if = "mdc-mdio";
						/* in case the interface is i2c phy-addr is the
						 * 5 lowest bits of the i2c address*/
						phy-addr = <4>;
						/*
						 * MDC-MDIO frequency:
						 * - "2.5Mhz"
						 * - "1.0Mhz"
						 */
						mdc-mdio-freq = "1.0Mhz";
						/* auto negotiation (in-band, out-of-band)*/
						auto-neg-mode="out-of-band";
					};
				};

				port2 {
					status = "enabled";

					/*
					 * MAC mode (rgmii, sgmii, 1g-serial, 10g-serial, auto-detect, auto-detect-auto-speed)
					 * - auto-detect mode is relevant when SFP exists. in this mode
					 * SFP EEPROM will be read to detect what SFP inserted
					 * - auto-detect-auto-speed mode is relevant when SFP exists and
					 * the SerDes reference clock frequency is 156.25Mhz. In this
					 * mode SFP EEPROM will be read to detect what SFP inserted while
					 * 10G serial and 1G serial SFP modeuls can be exchanged on-the-fly
					 * as long as all active SerDes based Ethernet ports use the same
					 * mode.
					 */
					mode = "auto-detect-auto-speed";

					/*
					 * I2C bus ID as shows in Linux I2C bus enumeration:
					 * When using I2C_A and I2C Mux is connected to I2C_A, Linux enumerates multiple I2C buses:
					 * - I2C bus 0 is the physical bus
					 * - I2C bus 1 is channel 0 of the mux
					 * - I2C bus 2 is channel 1 of the mux
					 * - ...
					 * Relevant when MAC mode is auto-detect or when phy_type is i2c
					 */
					/* QNAP modify from 3 to 2 */
					i2c-id = <1>;

					10g-serial {
						auto-neg = "disabled";
						link-training = "disabled";
						fec = "disabled";
					};
				};

				port3 {
					status = "enabled";

					/*
					 * MAC mode (rgmii, sgmii, 1g-serial, 10g-serial, auto-detect, auto-detect-auto-speed)
					 * - auto-detect mode is relevant when SFP exists. in this mode
					 * SFP EEPROM will be read to detect what SFP inserted
					 * - auto-detect-auto-speed mode is relevant when SFP exists and
					 * the SerDes reference clock frequency is 156.25Mhz. In this
					 * mode SFP EEPROM will be read to detect what SFP inserted while
					 * 10G serial and 1G serial SFP modeuls can be exchanged on-the-fly
					 * as long as all active SerDes based Ethernet ports use the same
					 * mode.
					 */
					mode = "rgmii";
					ext_phy {
						/* PHY management interface type (mdc-mdio, xmdc-xmdio, i2c) */
						phy_mgmt_if = "mdc-mdio";
						/* in case the interface is i2c phy-addr is the
						 * 5 lowest bits of the i2c address*/
						phy-addr = <5>;
						/*
						 * MDC-MDIO frequency:
						 * - "2.5Mhz"
						 * - "1.0Mhz"
						 */
						mdc-mdio-freq = "1.0Mhz";
						/* auto negotiation (in-band, out-of-band)*/
						auto-neg-mode="out-of-band";
					};
				};
			};

			/* PCIe port configuration */
			pcie {
				/*
				 * Selects which ports are used as end-point
				 * ports, e.g. <0>.
				 */
				ep-ports = <>;

				/* Port 0 status, speed, and number of lanes */
				port0 {
					status = "enabled";
					gen = <3>;
					width = <4>;
				};

				/* Port 1 status, speed, and number of lanes */
				port1 {
					status = "disabled";
					gen = <3>;
					width = <4>;
				};

				/* Port 1 status, speed, and number of lanes */
				port2 {
					status = "disabled";
					gen = <3>;
					width = <4>;
				};
			};
		};

		/* pmu { status = "disabled"; }; */
		arch-timer { compatible = "disabled"; };
		/* timer0 { status = "disabled"; }; */
		/* timer1 { status = "disabled"; }; */
		timer2 { status = "disabled"; };
		timer3 { status = "disabled"; };
		wdt1 { status = "disabled"; };
		wdt2 { status = "disabled"; };
		wdt3 { status = "disabled"; };
		/* i2c-pld  { status = "disabled"; }; */
		/* spi { status = "disabled"; }; */
		i2c-gen  { status = "disabled"; };
		/* gpio0 { status = "disabled"; }; */
		/* gpio1 { status = "disabled"; }; */
		/* gpio2 { status = "disabled"; }; */
		/* gpio3 { status = "disabled"; }; */
		/* gpio4 { status = "disabled"; }; */
		/* gpio5 { status = "disabled"; }; */
		/*uart0 { status = "disabled"; };*/
		/*uart1 { status = "disabled"; };*/
		/*uart2 { status = "disabled"; };*/
		uart3 { status = "disabled"; };
		nor_flash { status = "disabled"; };
		/* nand-flash { status = "disabled"; }; */
		/* al-fabric { status = "disabled"; }; */
		/* pcie-internal { status = "disabled"; }; */
		/* pcie-external0 { status = "disabled"; }; */
		/* pcie-external1 { status = "disabled"; }; */
		/* pcie-external2 { status = "disabled"; }; */

		spi {
			/* cs-gpios = <&gpio0 4 0>; */

			spiflashx@0 {
				#address-cells = <1>;
				#size-cells = <1>;
				compatible = "spi_flash_jedec_detection";
				spi-max-frequency = <25000000>; /* 25MHz */
				reg = <0>;

				partition@0 {
					reg = <0x0 0xA0000>; /* 640B */
					label = "loader";
					read-only;
				};

				partition@1 {
					reg = <0xA0000 0x60000>; /* 384 KB */
					label = "env";
				};				
			};
		};


		nand-flash {
			#address-cells = <1>;
			#size-cells = <1>;
			partition@0 {
				label = "boot1_kernel";
				reg = <0x00000000 0x02000000>;
			};
			partition@1 {
				label = "boot1_rootfs2";
				reg = <0x02000000 0xD800000>;
			};
			partition@2 {
				label = "boot2_kernel";
				reg = <0xF800000 0x02000000>;
			};
			partition@3 {
				label = "boot2_rootfs2";
				reg = <0x11800000 0xD800000>;
			};
			partition@4 {
				label = "config";
				reg = <0x1F000000 0xF00000>;
			};
		};

		i2c-pld  {
			#address-cells = <1>;
			#size-cells = <0>;
			/*RX-8010*/
			rtc@32 {
				compatible = "epson,rx8010";
				reg = <0x32>;
				/* gpios = <&gpio2 17 0>,  <&gpio4 19 0>; */
			};

			/*PIC-16F722A*/
			pic@18 {
				compatible = "pic,722A";
				reg = <0x18>;
			};

			i2c_mux@70 {
				compatible = "pca9543";
				reg = <0x70>;
			};
		};


		/* SATA SW controlled leds, use gpio 1 for port 0 host 1, and gpio 2 for port 1 host 1 */
		/* host 1 pci address is domain 0, bus 0, device (slot) 9 */
		/* uncomment the below node in order to enable */
		/* QNAP Patch for support sw hd led functions */
		sata_sw_leds {
			compatible = "annapurna-labs,al-sata-sw-leds";
			led@0 {
				label = "host 0, port 0 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <8>;
				port = <0>;
				gpios =<&gpio4 1 0>;
			};
			led@1 {
				label = "host 0, port 1 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <8>;
				port = <1>;
				gpios =<&gpio4 2 0>;
			};
			led@2 {
				label = "host 0, port 2 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <8>;
				port = <2>;
				gpios =<&gpio2 6 0>;
			};
			led@3 {
				label = "host 0, port 3 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <8>;
				port = <3>;
				gpios =<&gpio2 7 0>;
			};
			led@4 {
				label = "host 1, port 4 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <9>;
				port = <0>;
				gpios =<&gpio3 0 0>;
			};
			led@5 {
				label = "host 1, port 5 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <9>;
				port = <1>;
				gpios =<&gpio3 1 0>;
			};
			led@6 {
				label = "host 1, port 6 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <9>;
				port = <2>;
				gpios =<&gpio4 4 0>;
			};
			led@7 {
				label = "host 1, port 7 activity&presence led";
				pci_domain = <0>;
				pci_bus = <0>;
				pci_dev = <9>;
				port = <3>;
				gpios =<&gpio4 5 0>;
			};
		};
	};
};
